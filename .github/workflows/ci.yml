# AI generated code

name: CI Build and Lint # A munkafolyamat neve (megjelenik a GitHub Actions fülön)

# Mikor fusson le ez a munkafolyamat?
on:
  # Futtatás, ha push történik a 'main' ágra
  push:
    branches: [master] # Cseréld le 'master'-re, ha az a fő ágad neve

  # Futtatás, ha Pull Requestet nyitnak vagy frissítenek a 'main' ágra
  pull_request:
    branches: [master] # Cseréld le 'master'-re, ha az a fő ágad neve

# A munkafolyamat által végrehajtott feladatok (jobs)
jobs:
  build-and-lint: # A feladat azonosítója
    name: Build and Lint # A feladat neve (megjelenik a GitHub UI-n)
    runs-on: ubuntu-latest # Milyen operációs rendszeren fusson (általában ez jó)

    # A feladat lépései
    steps:
      # 1. lépés: A kód letöltése (checkout) a futtató környezetbe
      - name: Checkout repository
        uses: actions/checkout@v4 # Standard GitHub action a kód letöltésére

      # 2. lépés: Node.js környezet beállítása
      - name: Set up Node.js
        uses: actions/setup-node@v4 # Standard action Node.js beállítására
        with:
          node-version: "20.x" # Add meg a projekt által igényelt Node.js verziót (pl. 18.x, 20.x)
          cache: "npm" # Gyorsítótárazza az npm függőségeket a gyorsabb telepítéshez

      # 3. lépés: Függőségek telepítése
      # 'npm ci' használata ajánlott CI környezetben, mert a package-lock.json alapján telepít
      - name: Install dependencies
        run: npm ci

      # 4. lépés: Lint futtatása
      - name: Run linter
        run: npm run lint

      # 5. lépés: Build futtatása
      - name: Run build
        run: npm run build
        # Ha a buildhez környezeti változók kellenek, itt kell beállítani őket
        # env:
        #   NEXT_PUBLIC_VALAMI: ${{ secrets.NEXT_PUBLIC_VALAMI_SECRET }}
        #   DATABASE_URL: ${{ secrets.DATABASE_URL_SECRET }}
